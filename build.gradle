buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // This sucks down a lot of stuff that 'normal' users wouldn't
        // have and won't need anyway.
        if( project.hasProperty('releaseUser') ) {
            classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        }
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'checkstyle'

version='1.0.1-SNAPSHOT'
group='com.simsilica'

ext.jmeVersion = "3.3.0-SNAPSHOT"
ext.slf4jVersion = '1.7.32'

repositories {
    mavenLocal()

    if( JavaVersion.current() == JavaVersion.VERSION_1_7 ) {
        // Fallback for JDK 7 that can no longer connect to jcenter with https
        maven { url "http://jcenter.bintray.com" }
    } else {
        jcenter()
    }
}

// Version meta-data
ext {
    releaseDescription = "SimFX ${project.version}"
    releaseVcsTag = "${project.name}-v${project.version}"
}

// Project-wide meta-data
ext {
    bintrayLabels = ['jMonkeyEngine', 'gamedev', 'util']
    websiteUrl = 'https://github.com/Simsilica/SimFX'
    vcsUrl = 'https://github.com/Simsilica/SimFX.git'
    githubRepo = 'Simsilica/SimFX'
    issueTrackerUrl = 'https://github.com/Simsilica/SimFX/issues'
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.jmonkeyengine:jme3-core:$jmeVersion"

    compile "com.simsilica:lemur:1.14.0"
    compile "com.simsilica:lemur-props:1.0.1"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
}

checkstyle {
   configFile = rootProject.file('checkstyle.xml')
   configProperties = [projectRoot: "${rootDir}"]
}

// Configuration to produce maven-repo style -sources and -javadoc jars
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude '**/.backups'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task assetsJar(type: Jar) {
    classifier = 'assets'
    from file('assets')
    exclude '**/*.psd'
    exclude '**/.backups'
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives assetsJar
}

// Put this at the end or it won't pick up the project.version and stuff
if( project.hasProperty('releaseUser') ) {
    apply plugin: 'com.jfrog.bintray'
    apply from: 'https://raw.githubusercontent.com/Simsilica/gradle-plugins/master/simtools-release.gradle'
}


